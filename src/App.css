.bottomBar {
  position: fixed;
  width: 100vw;
  height: 125px;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background: transparent;
  backdrop-filter: blur(5px);
  opacity: 0;
  transition: opacity 0.4s ease-in-out;
}

.bottomBar:hover {
  opacity: 1;
}

.bottomContentWrapper {
  position: relative;
  background-color: transparent;
  height: fit-content;
  width: fit-content;
  display: flex;
  flex-direction: row;
  margin: auto;
}

.closeBtn:hover {
  background-color: red !important;
}

.dragBar {
  position: fixed;
  top: -30px;
  left: 0;
  display: flex;
  justify-content: flex-end;
  background-color: rgba(75, 75, 75, 0.2);
  height: 30px;
  width: 100vw;
  z-index: 10; /* Should always be on top */
  transition: top .4s ease-in-out;
}

.dragBar:hover {
  top: 0;
}

.dragBarAccenter {
  position: fixed;
  top: 0;
  left: 0;
  background-color: transparent;
  height: 30px;
  width: 100vw;
  z-index: 5; /* Should be above everything except the .dragBar */
}

.dragBarAccenter:hover ~ .dragBar {
  top: 0;
}

/* Range input customization */
input[type="range"]::-webkit-slider-runnable-track {
  border-radius: 100000px;
  outline: 2px white solid;
  background-color: black;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  background: black;
  background-color: black;
  color: black;
  border: 2px blue solid;
  width: 200px;
}

.mainVideo {
  position: relative;
  width: 100vw;
  height: 100vh;
  background-color: transparent;
  background: transparent;
}

.playpause {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80px;
  aspect-ratio: 1 / 1;
  border: 4px solid black;
  background-color: transparent;
  border-radius: 10000px;
  align-self: center;
  cursor: pointer;
}

.playpause > svg {
  height: 80%;
  aspect-ratio: auto;
}

.playpause > svg > path {
  fill: white;
}

.progress {
  width: 100%;
  margin: 0;
}

.progressComponents {
  width: 100vw;
  display: flex;
  flex-direction: row;
}

.timeLabel {
  text-decoration: none;
  width: fit-content;
  margin: 0 10px;
  mix-blend-mode: difference;
}

.utilControl {
  height: 150px; /* This value must be the same as the height of the bottom bar. Didn't bother making a variable*/
  width: 100vw;
  position: fixed;
  bottom: 0;
  left: 0;
  background-color: transparent;
  pointer-events: auto;
}

.utilControl:hover ~ .bottomBar {
  transform: translate(0, 0);
}

.volume {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 80px;
  aspect-ratio: 1 / 1;
  border: 4px solid black;
  background-color: transparent;
  border-radius: 10000px;
  align-self: center;
  cursor: pointer;
}

.volumeBar {
  display: flex;
  transform-origin: 50% 50%;
  transform: rotate(-90deg);
  width: 100px;
  margin: 0;
}

.windowControls {
  height: 100%;
  width: fit-content;
  background-color: white;
  display: flex;
  flex-direction: row;
}

.windowControl {
  height: auto;
  width: fit-content;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: black;
  border: none;
  transition: background-color .4s ease-in-out;
}

.windowControl:hover {
  background-color: white;
}

.windowControl:disabled {
  background-color: gray !important;
}

.windowControl:disabled > svg {
  fill: red !important;
}

.windowControl > svg {
  height: 25px;
  aspect-ratio: 1 / 1;
  fill: white;
  transition: fill .4s ease-in-out;
}

.windowControl:hover > svg {
  fill: black;
}